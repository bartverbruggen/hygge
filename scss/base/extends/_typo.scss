@function fs($target, $context: $global-font-size, $unit: rem) {
  @return #{round(($target/$context)*1000)/1000}#{$unit};
}
@function lh( $target, $context: $global-font-size) {
  @return round(($target/$context)*1000)/1000;
}

// Convert a px font size to rem
@mixin fsRem($font-size) {
  font-size: ceil($font-size);
  font-size: fs($font-size);
}

// Reset the list
@mixin listreset($mode: null) {
  list-style: none;
  padding: 0;
  margin-top: 0;
  @if $mode != 'soft' {
    margin-bottom: 0;
  }
}

@mixin link-variant($link: $color-link, $hover: null, $visited: null) {
  @if $visited == null {
    $visited: $link;
  }
  @if $hover == null {
    $hover: $link;
  }

  color: $link;
  &:visited {
    color: $visited;
  }
  &:hover,
  &:focus {
    color: $hover;
  }
}

@mixin renderType($type) {
  @each $element, $props in $type {
    #{$element} {
      @each $prop, $value in $props {
        @if $prop == 'font-size' {
          @include fsRem($value);
        } @else {
          #{$prop}: $value;
        }
      }
    }
  }
}
